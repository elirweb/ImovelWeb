//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImovelWeb.Console.ServicoImovelweb {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XmlMenu", Namespace="http://schemas.datacontract.org/2004/07/ImovelWeb.WCF")]
    [System.SerializableAttribute()]
    public partial class XmlMenu : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinqField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Linq {
            get {
                return this.LinqField;
            }
            set {
                if ((object.ReferenceEquals(this.LinqField, value) != true)) {
                    this.LinqField = value;
                    this.RaisePropertyChanged("Linq");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicoImovelweb.IMenu")]
    public interface IMenu {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenu/PesquisarMenu", ReplyAction="http://tempuri.org/IMenu/PesquisarMenuResponse")]
        ImovelWeb.Console.ServicoImovelweb.XmlMenu PesquisarMenu(string menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenu/PesquisarMenu", ReplyAction="http://tempuri.org/IMenu/PesquisarMenuResponse")]
        System.Threading.Tasks.Task<ImovelWeb.Console.ServicoImovelweb.XmlMenu> PesquisarMenuAsync(string menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenu/Gravar", ReplyAction="http://tempuri.org/IMenu/GravarResponse")]
        void Gravar(ImovelWeb.Console.ServicoImovelweb.XmlMenu m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenu/Gravar", ReplyAction="http://tempuri.org/IMenu/GravarResponse")]
        System.Threading.Tasks.Task GravarAsync(ImovelWeb.Console.ServicoImovelweb.XmlMenu m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenu/RemoverMenu", ReplyAction="http://tempuri.org/IMenu/RemoverMenuResponse")]
        string RemoverMenu(string menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMenu/RemoverMenu", ReplyAction="http://tempuri.org/IMenu/RemoverMenuResponse")]
        System.Threading.Tasks.Task<string> RemoverMenuAsync(string menu);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMenuChannel : ImovelWeb.Console.ServicoImovelweb.IMenu, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MenuClient : System.ServiceModel.ClientBase<ImovelWeb.Console.ServicoImovelweb.IMenu>, ImovelWeb.Console.ServicoImovelweb.IMenu {
        
        public MenuClient() {
        }
        
        public MenuClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MenuClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenuClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MenuClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ImovelWeb.Console.ServicoImovelweb.XmlMenu PesquisarMenu(string menu) {
            return base.Channel.PesquisarMenu(menu);
        }
        
        public System.Threading.Tasks.Task<ImovelWeb.Console.ServicoImovelweb.XmlMenu> PesquisarMenuAsync(string menu) {
            return base.Channel.PesquisarMenuAsync(menu);
        }
        
        public void Gravar(ImovelWeb.Console.ServicoImovelweb.XmlMenu m) {
            base.Channel.Gravar(m);
        }
        
        public System.Threading.Tasks.Task GravarAsync(ImovelWeb.Console.ServicoImovelweb.XmlMenu m) {
            return base.Channel.GravarAsync(m);
        }
        
        public string RemoverMenu(string menu) {
            return base.Channel.RemoverMenu(menu);
        }
        
        public System.Threading.Tasks.Task<string> RemoverMenuAsync(string menu) {
            return base.Channel.RemoverMenuAsync(menu);
        }
    }
}
